/*
CUSTOM SELECTORS FOR TACCSITE CMS - TEXASCALE BRAND

TODO: Use `@import` powered by a pre-processor to compose this file from different files
*/

/* ELEMENTS */

/* Roots */

/* GL-1: When Hedda and Matt are ready, in 2020, these may be moved to global styles */
/* SEE: /taccsite_cms/templates/head_branding_partials/head.branding.texascale.v2.html */
body {
    font-family: benton-sans, sans-serif;
    font-weight: 400;
    font-style: normal;
}

/* Headings

- `h1` = story titles
- `h2` = story subtitles
- `h3` = in-story header one
- `h4` = in-story header two
- `h5` = in-story header three
- `h6` = byline/category header
*/
/* NOTE: If scope classes are implemented, then these would be nested under a `.s-cms-content` */

h1, h3 {
	font-family: benton-sans, sans-serif;
	font-weight: 700;
	font-style: normal;
	text-transform: uppercase;
}
h1 {
	font-size: 50px;
	margin: 28px 0px 5px 0px;
	padding: 0px;
}
h2 {
	font-family: kepler-std-subhead, serif;
	font-weight: 700;
	font-style: normal;
	font-size: 25px;
	margin: 0px 0px 25px 0px;
}
h3 {
	font-size: 30px;
}

h4, h5, h6 {
	font-family: benton-sans, sans-serif;
	font-weight: 700;
	font-style: normal;
	text-transform: capitalize;
}
h4 {
	font-size: 25px;
}
h5 {
	font-size: 20px;
}
h6 {
	font-size: 20px;
	color: #999999;
	margin: 35px 15px 15px 15px;
	padding: 0px;
}

/* COMPONENTS */

/* Navigation (Nav & NavBar) */
/* FAQ: Some of these styles appear in media queries,
        but are not moved to here until we have custom media queries
        (https://preset-env.cssdb.org/features#custom-media-queries)
        which will allow duplication of media queries but not pixel values */

.navbar-dark .navbar-nav .nav-link {
	font-family: benton-sans, sans-serif;
	font-weight: 400;
	font-style: normal;
}

/* Byline */

.byline {
	color: #999999;
	margin: 10px 15px 3px 15px;
	font-size: 14px;
}
.byline-title {
	color: #999999;
	margin: 0px 15px 0px 15px;
	font-size: 12px;
}

/* Figure */

/*
TODO: Make this code modular, but still DRY.
NOTE: We need CSS processsing to make this happen, like will be provided by
      the upstream branch `task/11-support-css-processing` (pending approval).

1. Separate `.s-article` and `.figure-caption` rulesets (so code is modular).
2. Make `.s-article figure` extend/mixin/compose the figure-caption code (so code is not repeated).
*/

.s-article figure ~ h1,
.s-article figure ~ h2,
.s-article figure ~ h3,
.s-article figure ~ h4,
.s-article figure ~ h5,
.s-article figure ~ h6 {
	clear: both;
}

.s-article figure,
.figure {
	/* Overwrite Bootstrap `_reboot.scss` */
	margin-bottom: 20px;
}
.s-article figcaption,
.figure-caption {
	margin-top: 10px;
	padding-top: 5px;

	border-top: solid 3px rgb(51, 51, 51);
	/* Overwrite Bootstrap `_images.scss` */
	color: unset;

	font-family: kepler-std-caption, serif;
	font-style: italic;
	font-size: 12px;
}

/* Quote */

.blockquote {
	--top-padding: 20px;
	--bottom-padding: 1rem; /* from Bootstrap `p` (via `reboot.scss`) */
	--text-color: rgb(153, 153, 153);
	--decorator-width: 100px;
	--decorator-height: 80px;
	--decorator-buffer: 30px; /* double Bootstrap `.col` padding */

	position: relative;

	margin-top: 5px;
	margin-bottom: 20px;
	padding-top: var(--top-padding);
	padding-bottom: var(--bottom-padding);
	padding-left: calc(var(--decorator-width) + var(--decorator-buffer));

	color: var(--text-color);

	border-top: solid 1px #ff9c00;
	border-bottom: solid 3px #ff9c00;

	font-size: 18px;
	font-style: italic;
}
.blockquote::before {
	content: '';
	position: absolute;
	top: var(--top-padding);
	left: 0;

	width: var(--decorator-width);
	height: var(--decorator-height);

	background-image: url('/media/filer_public/cb/10/cb10191b-4e43-435b-9d7f-81b5f4d132ef/font-awesome-quotes.png');
	background-size: 100% 100%;
}

.blockquote-footer {
	text-align: right;
	font-size: 16px;
	margin-top: 5px;

	/* Overwrite Bootstrap `_reboot.scss` */
	color: var(--text-color);
}
.blockquote-footer cite {
	font-style: normal;
}

/* Offset Content */

@media only screen and (max-width: 991px) {
	[class*="offset-content--"] {
		display: block;
	}
}
@media only screen and (min-width: 992px) {
	[class*="offset-content--"] {
		--width: 34vw;
		--offset-distance: calc(var(--width) / 2 * -1);
		--buffer: 30px; /* double Bootstrap `.col` padding */
	}
	figure[class*="offset-content--"] > *,
	blockquote[class*="offset-content--"] {
		max-width: var(--width);
	}
	.offset-content--right {
		float: right;
		margin-left: var(--buffer);
	}
	.offset-content--left {
		float: left;
		padding-right: var(--buffer);
	}
}
@media only screen and (min-width: 992px) and (max-width: 2400px) {
	.offset-content--right {
		margin-right: var(--offset-distance);
	}
	.offset-content--left {
		margin-left: var(--offset-distance);
	}
}
