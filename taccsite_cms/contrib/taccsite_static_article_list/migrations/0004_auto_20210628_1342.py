# Generated by Django 2.2.16 on 2021-06-28 18:42

from django.db import migrations, models
import django.db.models.deletion
import djangocms_link.validators
import filer.fields.file


class Migration(migrations.Migration):

    dependencies = [
        ('filer', '0012_file_mime_type'),
        ('cms', '0022_auto_20180620_1551'),
        ('taccsite_static_article_list', '0003_auto_20210624_2141'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='taccsitearticlelist',
            name='footer_link_text',
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='anchor',
            field=models.CharField(blank=True, help_text='Appends the value only after the internal or external link. Do <em>not</em> include a preceding "#" symbol.', max_length=255, verbose_name='Anchor'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='external_link',
            field=models.CharField(blank=True, help_text='Provide a link to an external source.', max_length=2040, validators=[djangocms_link.validators.IntranetURLValidator(intranet_host_re=None)], verbose_name='External link'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='file_link',
            field=filer.fields.file.FilerFileField(blank=True, help_text='If provided links a file from the filer app.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='filer.File', verbose_name='File link'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='internal_link',
            field=models.ForeignKey(blank=True, help_text='If provided, overrides the external link.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.Page', verbose_name='Internal link'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='mailto',
            field=models.EmailField(blank=True, max_length=255, verbose_name='Email address'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='name',
            field=models.CharField(blank=True, max_length=255, verbose_name='Display name'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='phone',
            field=models.CharField(blank=True, max_length=255, verbose_name='Phone'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='target',
            field=models.CharField(blank=True, choices=[('_blank', 'Open in new window'), ('_self', 'Open in same window'), ('_parent', 'Delegate to parent'), ('_top', 'Delegate to top')], max_length=255, verbose_name='Target'),
        ),
        migrations.AddField(
            model_name='taccsitearticlelist',
            name='template',
            field=models.CharField(choices=[('default', 'Default')], default='default', max_length=255, verbose_name='Template'),
        ),
        migrations.AlterField(
            model_name='taccsitearticlelist',
            name='cmsplugin_ptr',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='taccsite_static_article_list_taccsitearticlelist', serialize=False, to='cms.CMSPlugin'),
        ),
        migrations.AlterField(
            model_name='taccsitearticlelist',
            name='layout_type',
            field=models.CharField(choices=[('always-rows-N--even', 'N Equal-Height Rows (always)'), ('widest-cols-2--even', '2 Equal-Width Columns (when list is at its widest)'), ('widest-cols-2--wide-narr', '2 Cols: 1 Wide, 1 Narrow (when list is at its widest)'), ('widest-cols-2--narr-wide', '2 Cols: 1 Narrow, 1 Wide (when list is at its widest)'), ('widest-cols-3--even', '3 Equal-Width Columns (when list is at its widest)')], default='always-rows-N--even', help_text='Layout of the articles within.', max_length=255),
        ),
        migrations.AlterField(
            model_name='taccsitearticlelist',
            name='style_type',
            field=models.CharField(blank=True, choices=[('divided', 'Dividers Between Articles')], help_text='Optional styles for the list itself.', max_length=255),
        ),
    ]
